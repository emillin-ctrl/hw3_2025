/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/

nav a:hover, nav a:focus {
  text-decoration: underline;
}


/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip {
     position: absolute;
     top: -40px;
     visibility: hidden; /* hidden by default*/
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip:focus {
     top: 20px;
     visibility: visible;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/

*:focus {
     border: 2px solid;
}

/* Step 4: Write selector/rule property to style the container */

.container {
     display: grid;
     grid-template-columns: 1fr 5fr 1fr;
     grid-row-gap: 15px;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid and place it in the grid. */

.container div:first-child {
     grid-area: 1 / 1 / 2 / 4;
     background: url("../images/header.jpg");
     background-attachment: fixed;
     background-position: center;
     background-repeat: no-repeat;
     background-size: cover;
     color: white;
}


/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

      /*This will be a lot of rules.... but be strategic and combine seletors*/

.about{
     grid-area: 2 / 2 / 3 / 3;
}
.method{
     grid-area: 3 / 2 / 3 / 3;
}
.clients{
     grid-area: 4 / 2 / 5 / 3;
}
.contact{
     grid-area: 5 / 2 / 6 / 3;
}

.about-image {
     grid-area: 2 / 1 / 3 / 4;
     max-height: 600px;
     overflow: hidden;
}
.method-image {
     grid-area: 3 / 1 / 4 / 4;
     max-height: 600px;
     overflow: hidden;
}
.clients-image {
     grid-area: 4 / 1 / 5 / 4;
     max-height: 600px;
     overflow: hidden;
}
.contact-image {
     grid-area: 5 / 1 / 6 / 4;
     max-height: 600px;
     overflow: hidden;
}

 /* Step 8: Write the selector/rule property to style the .text-block class. */
 .text-block {
     justify-self: center;
     align-self: center;
     text-align: center;
}

/* Add your media query here */
@media (min-width: 800px) {
     /* Step 9: Write the selector/rule property to style the nav element */
     nav {
          text-align: right; /* Align nav links to the right */
          padding: 30px 0;
          }
     nav a {
          display: inline-block; /* Keeps links inline but allows spacing */
          margin-left: 20px; /* Adds space between links */
        }

  /* Step 10: Write the selector/rule property to update the .container class */
     .container{
          grid-template-columns: 50px auto 500px auto 50px;
     }
     .container div:first-child {
          grid-area: 1 / 1 / 2 / 6;
     }
  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/
     .about, .clients, .method-image, .contact-image{
          grid-column: 3 / span 2;
     }
     .method, .contact, .about-image, .clients-image{
          grid-column: 2 / span 2;
     }
 /* Step 13:Write the selector/rule property to update the .text-block class */
     .text-block{
          max-height: 250px;
          overflow: hidden;
     }
}